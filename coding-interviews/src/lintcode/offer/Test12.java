package lintcode.offer;

/**
 * 剪绳子
 * <p>
 * 给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），
 * 每段绳子的长度记为 k[0],k[1]...k[m] 。请问 k[0]*k[1]*...*k[m] 可能的最大乘积是多少？
 * 例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。
 * <p>
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/jian-sheng-zi-lcof
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
public class Test12 {
    public int cuttingRope(int n) {
        if (n <= 3)
            return n - 1;

        int sum = 0;
        int a = n / 3, b = n % 3;
        if (b == 0)
            return (int) Math.pow(3, a);  // 刚好除尽
        if (b == 1)
            return (int) Math.pow(3, a - 1) * 4;  // 3 *1 < 2* 2

        return (int) Math.pow(3, a) * 2;

    }
}
