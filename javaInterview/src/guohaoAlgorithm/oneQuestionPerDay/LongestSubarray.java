package guohaoAlgorithm.oneQuestionPerDay;

/**
 * @Author guohao
 * @Date 2021/2/19 9:40
 * @Version 1.0
 *
 * 1493. 删掉一个元素以后全为 1 的最长子数组
 * 给你一个二进制数组 nums ，你需要从中删掉一个元素。
 *
 * 请你在删掉元素的结果数组中，返回最长的且只包含 1 的非空子数组的长度。
 *
 * 如果不存在这样的子数组，请返回 0 。
 *
 *
 *
 * 提示 1：
 *
 * 输入：nums = [1,1,0,1]
 * 输出：3
 * 解释：删掉位置 2 的数后，[1,1,1] 包含 3 个 1 。
 * 示例 2：
 *
 * 输入：nums = [0,1,1,1,0,1,1,0,1]
 * 输出：5
 * 解释：删掉位置 4 的数字后，[0,1,1,1,1,1,0,1] 的最长全 1 子数组为 [1,1,1,1,1] 。
 * 示例 3：
 *
 * 输入：nums = [1,1,1]
 * 输出：2
 * 解释：你必须要删除一个元素。
 * 示例 4：
 *
 * 输入：nums = [1,1,0,0,1,1,1,0,1]
 * 输出：4
 * 示例 5：
 *
 * 输入：nums = [0,0,0]
 * 输出：0
 */
public class LongestSubarray {

    public int longestSubarray(int[] nums) {
        int left = 0, right = 0, count = 0, ans = 0;
        int n = nums.length;
        while (right < n) {
            if (nums[right] == 1) count++;
            while (right - left + 1 > count + 1) {
                if (nums[left] == 1) count--;
                left++;
            }
            ans = Math.max(ans, count);
            right++;
        }
        return ans == n ? ans - 1 : ans;
    }

    public static void main(String[] args) {
        LongestSubarray test = new LongestSubarray();
        int[] nums = {1,1,0,0,1,1,1,0,1};
        System.out.println(test.longestSubarray(nums));
    }
}
